/*
 * Generated by Chef for <%= node['fqdn'] %>
 */

/* serverinfo: contains services information */
serverinfo {
    name = "ratbox.services";
    sid = "36D";
    description = "<%= @server_description %>";
    dcc_low_port = 3000;
    dcc_high_port = 5000;
    reconnect_time = 5 minutes;
    ping_time = 5 minutes;
    ratbox = yes;
    client_flood_max = 20;
    client_flood_max_ignore = 30;
    client_flood_ignore_time = 5 minutes;
    client_flood_time = 1 minute;
    allow_stats_o = yes;
    default_language = "en";
};

/* admin: contains general admin information */
admin {
    name = "<%= @server_admin_name %>";
    description = "ratbox services";
    email = "<%= @server_admin_email %>";
};

/* connect: specifies a server to connect to, name of uplink
 *          is specified in quotation marks
 */
connect "<%= node[:fqdn] %>" {
    host = "127.0.0.1";
    password = "<%= node[:ircd][:service_password] %>";
    port = 5555;
};

/* operator: specifies an oper who has extended access to services.
 *           The username is specified in quotation marks.
 */
<% @opers.each do |oper| %>
operator "<%= oper[:nick] %>" {
    user = "<%= oper[:user] %>@<%= oper[:host] %>";
    password = "<%= oper[:password] %>";
    flags = admin, dcc, route;
    userserv = admin;
    chanserv = admin;
    nickserv = drop;
    operserv = admin;
    operbot = channel;
    global = netmsg, welcome;
    jupeserv = jupe;
    banserv = kline, xline, resv, perm, remove, regexp, sync;
};
<% end %>

/* userserv - provides facilities to users for the registration of
 * usernames.  Required for channel registration.
 */
service "userserv" {
    nick = "USERSERV";
    username = "user";
    host = "services.int";
    realname = "user registration service";
    flags = opered, msg_self;
    loglevel = 5;
    #disable_register = yes;
    #register_url = "http://whatever/";
    register_time = 1 minute;
    register_amount = 5;
    host_register_time = 1 day;
    host_register_amount = 2;
    register_email = no;
    register_verify = no;
    expire_time = 4 weeks;
    expire_suspended_time = 4 weeks;
    expire_unverified_time = 1 day;
    expire_bonus_regtime = 2 months;
    expire_bonus = 1 day;
    expire_bonus_per_time = 2 weeks;
    expire_bonus_max = 4 weeks;
    allow_set_password = yes;
    allow_resetpass = no;
    allow_resetemail = no;
    resetpass_duration = 1 day;
    resetemail_duration = 1 day;
    reset_regtime_duration = 2 weeks;
    allow_set_email = yes;
    max_logins = 5;
    show_suspend_reasons = no;
};

/* chanserv - provides facilities for the registration of channels. */
service "chanserv" {
    nick = "CHANSERV";
    username = "chan";
    host = "services.int";
    realname = "channel registration service";
    flags = opered, login_help;
    loglevel = 3;
    #disable_register = yes;
    register_time = 1 minute;
    register_amount = 5;
    host_register_time = 1 day;
    host_register_amount = 4;
    expire_time = 4 weeks;
    expire_suspended_time = 4 weeks;
    max_bans = 50;
    expireban_frequency = 15 minutes;
    enforcetopic_frequency = 1 hour;
    autojoin_empty = yes;
    email_delowner = no;
    delowner_duration = 1 day;
    show_suspend_reasons = no;
};

/* nickserv - provides nickname registration.  These require a username
 * registration.
 */
service "nickserv" {
    nick = "NICKSERV";
    username = "nick";
    host = "services.int";
    realname = "nickname services";
    flags = opered, msg_self;
    loglevel = 3;
    max_nicks = 2;
    allow_set_warn = yes;
    warn_string = "This nickname is registered, you may be disconnected if a user regains this nickname.";
};

/* operserv - provides facilities for issuing modes and takeovers */
service "operserv" {
    nick = "OPERSERV";
    username = "oper";
    host = "services.int";
    realname = "oper services";
    flags = opered, msg_self, stealth, wallop_adm;
    loglevel = 1;
    allow_die = yes;
};

/* jupeserv - provides opers and admins the ability to jupe servers
 * preventing them from connecting to the network.
 */
service "jupeserv" {
    nick = "JUPESERV";
    username = "jupe";
    host = "services.int";
    realname = "server jupe service";
    flags = opered, msg_self, stealth;
    loglevel = 2;
    merge_into_operserv = no;
    oper_score = 3;
    jupe_score = 15;
    unjupe_score = 15;
    pending_time = 30 minutes;
};

/* operbot - a bot which will invite/op ircops in the set channels.   Useful
 * for oper only channels etc.
 */
service "operbot" {
    nick = "operbot";
    username = "operbot";
    host = "services.int";
    realname = "oper op/invite services";
    flags = opered, msg_self, stealth;
    loglevel = 1;
};

/* alis - a list service that lets users list channels according to more
 * specific criteria than an ircd allows.
 */
service "alis" {
    nick = "alis";
    username = "alis";
    host = "services.int";
    realname = "Advanced List Service - /msg alis help";
    flags = msg_self;
    loglevel = 1;
    max_matches = 60;
};

/* global - the global messaging service.  Allows messages to be sent
 * to all users on the network.
 */
service "global" {
    nick = "GLOBAL";
    username = "global";
    host = "services.int";
    realname = "Network Message Service";
    flags = opered, msg_self, stealth;
    loglevel = 1;
};

/* banserv - the ban service.  Allows bans (klines/xlines/resvs) to be
 * sent to all servers.  These bans can only be set on ircd-ratbox servers
 * running version 1.5 and above.
 */
service "banserv" {
    nick = "BANSERV";
    username = "banserv";
    host = "services.int";
    realname = "Ban Service";
    flags = opered, msg_self, stealth;
    loglevel = 1;
    merge_into_operserv = no;
    unban_time = 2 weeks;
    regexp_time = 1 day;
    max_kline_matches = 200;
    max_xline_matches = 200;
    max_regexp_matches = 200;
    temp_workaround = no;
    autosync_frequency = 2 weeks;
};

/* watchserv - the service for watching commands issued to services. */
service "watchserv" {
    nick = "WATCHSERV";
    username = "watchserv";
    host = "services.int";
    realname = "Command Watching Service";
    flags = msg_self, stealth;
    loglevel = 1;
    merge_into_operserv = no;
};

/* memoserv - the service for sending memos */
service "memoserv" {
    nick = "MEMOSERV";
    username = "memoserv";
    host = "services.int";
    realname = "Memo Service";
    flags = msg_self;
    loglevel = 0;
    max_memos = 50;
    memo_regtime_duration = 1 week;
};